library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;
use ieee.math_real.all;

entity score is
    port (
        x      : in integer;
        y      : in integer;
        enable : in std_logic;
        score_in  : in unsigned(3 downto 0);
        red, green, blue : out std_logic_vector(3 downto 0)
    );
end entity score;

architecture rtl of score is
    type bit_map_1d is array(11 downto 0) of std_logic;      -- Color = r + g + b
    type bit_map_2d is array (15 downto 0) of bit_map_1d;   --Collums + colors
    type bit_map_3d is array (15 downto 0) of bit_map_2d;   --Rows + colors + colors
    
    constant bit_map : bit_map_3d := (others => (others => (others => '1')));
begin

    if enable = '1' generate
        red <= bit_map(x)(y)(11 downto 8);
        green <= bit_map(x)(y)(7 downto 4);
        blue <= bit_map(x)(y)(3 downto 0);
    end generate;

    if enable = '0' generate
        red <= '0';
        green <= '0';
        blue <= '0';
    end generate;
    
end architecture;